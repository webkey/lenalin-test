.form-def-label {
	display: inline-block; // Need for line-height
	vertical-align: top;
	margin: 0;
	font-family: inherit;
	font-size: 1.2rem;
	line-height: 2rem;
	font-weight: bold;
	color: $text-color;
	user-select: none;
	-webkit-tap-highlight-color: transparent !important;

	mark {
		background: none;
		color: $base-color;
	}
}

.form-def-wrap {
	position: relative;
	width: 100%;
}

.form-def {
	$form-def: &;

	display: block;
	position: relative;
	height: 4rem;
	width: 100%;
	padding: 0.9rem 1.2rem;
	margin: 0;
	background-color: $form-def-bg-color;
	box-shadow: none;
	border-radius: 0.4rem;
	border: 0.1rem solid $form-def-border-color;
	font-family: inherit;
	font-size: 1.2rem;
	line-height: 2rem;
	color: $form-def-text-color;
	transition: color $animation-speed, border $animation-speed;

	&::-ms-clear,
	&::-ms-reveal {
		display: none;
	}

	&_icon-right {
		padding-right: 4rem;
	}

	// В optimize.scss на input-елементах обнулены закругления через составной селектор
	@at-root {
		#{$form-def},
		input#{$form-def} {
			border-radius: 0;
		}
	}

	// Дополнительные стили для <textarea>
	@at-root {
		textarea#{$form-def} {
			$lh: 2.2rem;
			$space-vertical: 1.8rem;
			$lines: 3;
			$height: calc(#{$lh * $lines + $space-vertical} + 2px);

			min-height: $height;
			height: $height;
			resize: vertical;
		}
	}

	// Placeholder
	// ----------------------------------------------------
	@include input-placeholder {
		color: $form-def-placeholder-color;
		transition: $animation-speed opacity;
	}

	// Placeholder hide on focus
	@include input-placeholder-focus {
		opacity: 0;
	}

	// Hover
	// ----------------------------------------------------
	&:hover {
		border-color: $form-def-border-color--focus;
	}

	// Focus
	// ----------------------------------------------------
	&:focus,
	&.focused {
		border-color: $form-def-border-color--focus;
	}

	// Has value
	// ----------------------------------------------------
	&.filled {
		border-color: $form-def-text-color;
	}

	// Error
	// ----------------------------------------------------
	&.error,
	&.js-confirm-password.confirm-error {
		border-color: $error-color;
	}

	// Success
	// ----------------------------------------------------
	&.js-confirm-password.confirm-success {
		border-color: $success-color;
	}

	// Disabled
	// ----------------------------------------------------
	&[disabled] {
		@include forms-disabled;

		@include input-placeholder {
			color: $form-text-color--disabled !important;
		}
	}
}

// Feedback Message
// ========================

.feedback {
	&-error,
	&-success {
		float: left;
		position: relative;
		width: 100%;
		padding: 0.4rem 0;
		font-size: 1.2rem;
		line-height: 1.4rem;
		letter-spacing: normal;
		white-space: nowrap;
		text-overflow: ellipsis;
		overflow: hidden;
		display: none;
	}

	&-error {
		color: $error-color;

		.error ~ & {
			display: block;
		}
	}

	&-success {
		color: $success-color;

		.success ~ & {
			display: block;
		}
	}

	&-error_confirm-password {
		.confirm-error ~ & {
			display: block;
		}
	}

	&-success_confirm-password {
		.confirm-success ~ & {
			display: block;
		}
	}
}

// Checkbox and Radiobutton
// ========================

.form-checkbox,
.form-radio {
	display: inline-block;
	vertical-align: top;
	margin: 0;
	font-size: 1.7rem;
	line-height: 2rem;
	color: inherit;
	user-select: none;
	-webkit-tap-highlight-color: transparent;

	input {
		//&:disabled {
		//	color: #bdbdbd !important;
		//
		//	& + span {
		//		cursor: default !important;
		//		color: #d6d6d6 !important;
		//
		//		&::before, &::after {
		//			border-color: currentColor !important;
		//		}
		//
		//		&::before {
		//			background-color: #f3f3f3 !important;
		//		}
		//	}
		//}
	}
}

.form-checkbox {
	$elem: &;
	$checkbox-size: 2rem;
	$checkbox-check-height: 0.6rem;
	$checkbox-check-width: 1rem;

	&__label {
		position: relative;
		display: inline-block;
		vertical-align: top;
		padding-left: 3.5rem;
		cursor: pointer;

		&::before,
		&::after {
			content: "";
			display: block;
			position: absolute;
			transition: border-color ease-in-out 0.2s;
			box-sizing: border-box;
		}

		&::before {
			left: 0;
			top: 50%;
			width: $checkbox-size;
			height: $checkbox-size;
			margin: -#{round-float($checkbox-size / 2, 1)} 0;
			border: 1px solid #c4c4c4;
			background-color: #c4c4c4;
			border-radius: 0.4rem;
			transition: opacity ease-in-out 0.2s;
		}

		&::after {
			opacity: 0;
			left: 0;
			top: 50%;
			height: $checkbox-check-height;
			width: $checkbox-check-width;
			margin: -#{round-float($checkbox-check-height / 2, 1) + 0.1} #{round-float(($checkbox-size - $checkbox-check-width) / 2, 1)};
			border: solid currentColor;
			border-width: 0 0 0.2rem 0.2rem;
			transform: rotate(-30deg) scale3d(1.1, 1.1, 1);
			transition: transform cubic-bezier(0.45, -1.1, 0.45, 2.1) 0.22s, opacity ease-in-out 0.2s;
		}
	}

	&__input {
		position: absolute;
		padding: 0;
		margin: 0;
		display: none;

		@at-root {
			&:checked ~ #{$elem}__label {
				&::after {
					opacity: 1;
					transform: rotate(-45deg) scale3d(1, 1, 1);
				}
			}
		}
	}
}

.form-radio {
	$elem: &;
	$radio-size: 2rem;
	$radio-check-size: 1.2rem;

	&__label {
		position: relative;
		display: inline-block;
		vertical-align: top;
		padding-left: 3.5rem;
		cursor: pointer;

		&::before,
		&::after {
			content: "";
			display: block;
			position: absolute;
			transition: all ease-in-out 0.2s;
			box-sizing: border-box;
		}

		&::before {
			left: 0;
			top: 50%;
			width: $radio-size;
			height: $radio-size;
			margin: -#{round-float($radio-size / 2, 1)} 0;
			border: 1px solid #c4c4c4;
			background-color: #c4c4c4;
			border-radius: round-float($radio-size / 2, 1);
		}

		&::after {
			opacity: 0;
			left: 0;
			top: 50%;
			height: $radio-check-size;
			width: $radio-check-size;
			margin: -#{round-float($radio-check-size / 2, 1)} #{round-float(($radio-size - $radio-check-size) / 2, 1)};
			border: round-float($radio-check-size / 2, 1) solid currentColor;
			border-radius: round-float($radio-check-size / 2, 1);

			$scale: 1.35, 1.35;

			transform: scale($scale);
			transform: scale3d($scale, 1);
		}
	}

	&__input {
		position: absolute;
		padding: 0;
		margin: 0;
		display: none;

		@at-root {
			&:checked ~ #{$elem}__label {
				&::after {
					opacity: 1;

					$rotate: 0;
					$scale: 1, 1;

					transform: scale($scale);
					transform: scale3d($scale, 1);
				}
			}
		}
	}
}
